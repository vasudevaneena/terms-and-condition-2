// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <h1>
            HealthShare Front-End Test
          </h1>
        </header>,
        <form
          onSubmit={[Function]}
        >
          <label>
            Email address
            <input
              className="input-style"
              name="email"
              onChange={[Function]}
              placeholder="e.g name@example.com"
            />
          </label>
          <label>
            Password
            <input
              className="input-style"
              name="password"
              placeholder="••••••••"
            />
          </label>
          <div
            className="check-padding"
          >
            <input
              id="checkbox"
              name="checkbox"
              onChange={[Function]}
              type="checkbox"
              value={false}
            />
            <a>
               Accept terms and condition to Register
            </a>
          </div>
          <button
            className="disable-cta"
            disabled={true}
            id="registerButton"
            type="submit"
          >
            Register
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            HealthShare Front-End Test
          </h1>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "HealthShare Front-End Test",
          },
          "ref": null,
          "rendered": "HealthShare Front-End Test",
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Email address
              <input
                className="input-style"
                name="email"
                onChange={[Function]}
                placeholder="e.g name@example.com"
              />
            </label>,
            <label>
              Password
              <input
                className="input-style"
                name="password"
                placeholder="••••••••"
              />
            </label>,
            <div
              className="check-padding"
            >
              <input
                id="checkbox"
                name="checkbox"
                onChange={[Function]}
                type="checkbox"
                value={false}
              />
              <a>
                 Accept terms and condition to Register
              </a>
            </div>,
            <button
              className="disable-cta"
              disabled={true}
              id="registerButton"
              type="submit"
            >
              Register
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Email address",
                <input
                  className="input-style"
                  name="email"
                  onChange={[Function]}
                  placeholder="e.g name@example.com"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Email address",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-style",
                  "name": "email",
                  "onChange": [Function],
                  "placeholder": "e.g name@example.com",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Password",
                <input
                  className="input-style"
                  name="password"
                  placeholder="••••••••"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Password",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input-style",
                  "name": "password",
                  "placeholder": "••••••••",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="checkbox"
                  name="checkbox"
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />,
                <a>
                   Accept terms and condition to Register
                </a>,
              ],
              "className": "check-padding",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "checkbox",
                  "name": "checkbox",
                  "onChange": [Function],
                  "type": "checkbox",
                  "value": false,
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Accept terms and condition to Register",
                },
                "ref": null,
                "rendered": " Accept terms and condition to Register",
                "type": "a",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Register",
              "className": "disable-cta",
              "disabled": true,
              "id": "registerButton",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Register",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <h1>
              HealthShare Front-End Test
            </h1>
          </header>,
          <form
            onSubmit={[Function]}
          >
            <label>
              Email address
              <input
                className="input-style"
                name="email"
                onChange={[Function]}
                placeholder="e.g name@example.com"
              />
            </label>
            <label>
              Password
              <input
                className="input-style"
                name="password"
                placeholder="••••••••"
              />
            </label>
            <div
              className="check-padding"
            >
              <input
                id="checkbox"
                name="checkbox"
                onChange={[Function]}
                type="checkbox"
                value={false}
              />
              <a>
                 Accept terms and condition to Register
              </a>
            </div>
            <button
              className="disable-cta"
              disabled={true}
              id="registerButton"
              type="submit"
            >
              Register
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              HealthShare Front-End Test
            </h1>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "HealthShare Front-End Test",
            },
            "ref": null,
            "rendered": "HealthShare Front-End Test",
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Email address
                <input
                  className="input-style"
                  name="email"
                  onChange={[Function]}
                  placeholder="e.g name@example.com"
                />
              </label>,
              <label>
                Password
                <input
                  className="input-style"
                  name="password"
                  placeholder="••••••••"
                />
              </label>,
              <div
                className="check-padding"
              >
                <input
                  id="checkbox"
                  name="checkbox"
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
                <a>
                   Accept terms and condition to Register
                </a>
              </div>,
              <button
                className="disable-cta"
                disabled={true}
                id="registerButton"
                type="submit"
              >
                Register
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Email address",
                  <input
                    className="input-style"
                    name="email"
                    onChange={[Function]}
                    placeholder="e.g name@example.com"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Email address",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input-style",
                    "name": "email",
                    "onChange": [Function],
                    "placeholder": "e.g name@example.com",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Password",
                  <input
                    className="input-style"
                    name="password"
                    placeholder="••••••••"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Password",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input-style",
                    "name": "password",
                    "placeholder": "••••••••",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="checkbox"
                    name="checkbox"
                    onChange={[Function]}
                    type="checkbox"
                    value={false}
                  />,
                  <a>
                     Accept terms and condition to Register
                  </a>,
                ],
                "className": "check-padding",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "id": "checkbox",
                    "name": "checkbox",
                    "onChange": [Function],
                    "type": "checkbox",
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Accept terms and condition to Register",
                  },
                  "ref": null,
                  "rendered": " Accept terms and condition to Register",
                  "type": "a",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Register",
                "className": "disable-cta",
                "disabled": true,
                "id": "registerButton",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Register",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
